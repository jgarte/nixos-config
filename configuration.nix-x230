{ config, pkgs, lib, ... }:

{
    networking.hostName = "x230";
    networking.hostId = "2ab69157";

    imports = [
        ./packages/nixpkgs-from-submodule.nix
        ./packages/use-my-overlays.nix
        <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
        ./hardware/intel.nix
        ./hardware/laptop.nix
        ./partitions/x230-laptoptop.nix
        ./users/root.nix
        ./users/alex3rd.nix
        ./contrib/custom-scripts.nix
        ./custom-services/sshuttle.nix
        ./private/sshuttle.nix
        ./custom-services/imapfilter.nix
    ];

    boot.loader.grub = {
        enable = true;
        version = 2;
        device = "/dev/sda";
        configurationLimit = 10;
    };

    i18n = {
        # TODO: provide font + keymap
        defaultLocale = "ru_RU.UTF-8";
    };

    time.timeZone = "Europe/Moscow";

    nixpkgs.config = {
        allowUnfree = true;
        packageOverrides = pkgs: {
           xsaneGimp = pkgs.xsane.override { gimpSupport = true; };
        };
        sane.snapscanFirmware = "/etc/nixos/private/firmware/Esfw52.bin";
    };

    nix.extraOptions = ''
      gc-keep-outputs = true
      gc-keep-derivations = true
      cores = 4
    '';
    nix.trustedUsers = [ "root" "alex3rd" ];

    environment.systemPackages = with pkgs; [
        # editors
        vim

        # development
        git
        sbcl
        go2nix
        dep2nix
        pypi2nix
        clang
        nodejs

        # devdeps
        gnumake
        gcc
        binutils

        # shell
        rxvt_unicode
        tmux
        ripgrep

        # system
        iotop
        powertop

        # misc
        busybox
        exa
        mc
        psmisc
        tree
        wget
        appimage-run

        # office
        pandoc
        texlive.combined.scheme-full

        # virtualisation
        docker_compose
        vagrant

        # media
        pasystray
        pavucontrol

        # X11 libs and tools
        xlibs.xmodmap
        xorg.xhost

        # Python
        python3Full
        python2Full

        # DE/WM related
        gnome3.gnome-tweak-tool

        # Nix-related
        nix-index
        nix-prefetch-scripts
        nix-repl
        nix-serve
        nixops

        # custom shell scripts
        hddtemp
        status_bat_info
        status_cpu_temp
        status_uptime
        zip2targz
    ];

    fonts = {
        enableFontDir = true;
        enableGhostscriptFonts = true;
        fonts = with pkgs; [
            anonymousPro
            corefonts
            dejavu_fonts
            fantasque-sans-mono
            fira-code
            fira-mono
            font-droid
            freefont_ttf
            go-font
            google-fonts
            # hack # FIXME: maybe wrong derivation name
            inconsolata
            # input-fonts # NOTE: no automated download, should prefetch manually
            iosevka
            liberation_ttf
            mononoki
            noto-fonts
            powerline-fonts
            source-code-pro
            terminus_font
            ttf_bitstream_vera
            ubuntu_font_family
        ];
    };

    environment.etc."Xmodmap".source = ./dotfiles/x11/xmodmaprc;

    networking.extraHosts = builtins.readFile ./private/extra_hosts;
    networking.firewall.enable = false;
    networking.networkmanager.enable = true;
    networking.networkmanager.unmanaged = [ "interface-name:ve-*" ];

    programs = {
        mtr.enable = true;
        # TODO: check extra config / think of moving to home-manager.services.gpg-agent (check if it affects imapfilter.service )
        gnupg.agent = {
            enable = true;
            enableSSHSupport = true;
        };
    };

    virtualisation.docker.enable = true;
    virtualisation.docker.storageDriver = "overlay2";

    virtualisation.libvirtd.enable = true;
    virtualisation.virtualbox.host.enable = true;
    nixpkgs.config.virtualbox.enableExtensionPack = true;

    services = {
        # TODO: dropbox / compare with syncthing
        # TODO: arbtt (broken)
        printing = {
            enable = true;
            drivers = [ pkgs.hplip ];
        };
        kmscon = {
            enable = true;
            hwRender = true;
            extraConfig = ''
            font-name=Fira Mono
            '';
        };
        openssh = {
            enable = true;
            forwardX11 = true;
        };
        redshift = {
            enable = true;
            latitude = "55.751244";
            longitude = "37.618423";
            temperature.day = 5500;
            temperature.night = 3700;
        };
        locate.enable = true;
        journald.extraConfig = ''
            MaxRetentionSec=2day
        '';
    };

    sound.enable = true;
    # TODO: maybe move under "hardware"
    hardware = {
        pulseaudio = {
            enable = true;
            support32Bit = true;
        };
        sane = {
            enable = true;
            extraBackends = [ pkgs.epkowa ];
        };
        bluetooth.enable = true;
    };

    services.xserver = {
        videoDrivers = [ "modesetting" ]; # TODO: maybe also add / substitute with "intel"
        desktopManager = {
            gnome3.enable = true;
            default = "gnome3";
        };
        displayManager = {
            gdm = {
                enable = true;
                autoLogin.enable = true;
                autoLogin.user = "alex3rd"; # TODO: try to make a SPOT with users definitions
            };
            sessionCommands = ''
              ${pkgs.xlibs.xmodmap}/bin/xmodmap /etc/Xmodmaprc
            '';
        };
        windowManager.xmonad.enable = true;
        enable = true;
        xkbOptions = "caps:none";
        layout = "us,ru";
        libinput = {
            enable = true;
            naturalScrolling = true;
            disableWhileTyping = true;
            tappingDragLock = false;
            accelSpeed = "0.6";
        };
    };

    security.sudo.wheelNeedsPassword = false;
    security.polkit.extraConfig = ''
        /* Allow users in wheel group to manage systemd units without authentication */
        polkit.addRule(function(action, subject) {
            if (action.id == "org.freedesktop.systemd1.manage-units" &&
                subject.isInGroup("wheel")) {
                return polkit.Result.YES;
            }
        });
    '';

    system.nixos.stateVersion = "18.03";
}
