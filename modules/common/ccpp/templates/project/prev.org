* meganet projects automation
  #+begin_src nix
    home-manager.users.alex3rd = {
      home.file = {
        "${wsRoot "github"}/wiedzmin/cligen/.ccls-root".text = "";
        "${wsRoot "github"}/wiedzmin/cligen/shell.nix".text =
          mkProjectShellNix { simple = with pkgs; [ bear bison flex autoconf ]; };
        "${wsRoot "github"}/wiedzmin/pycligen/.envrc".text = ''
          use nix
        '';
        "${wsRoot "github"}/wiedzmin/pycligen/shell.nix".text = mkProjectShellNix {
          simple = with pkgs; [ automake autoconf bear bison flex python37 ];
          native = with pkgs; [ pkg-config cligen qdbm.dev qdbm.lib ];
        };
        "${wsRoot cfg.workspace.token}/vros-cli/src/.ccls-root".text = "";
        "${wsRoot cfg.workspace.token}/vros-cli/src/.envrc".text = ''
          use nix
        '';
        "${wsRoot cfg.workspace.token}/vros-cli/src/shell.nix".text =
          mkProjectShellNix { simple = with pkgs; [ bear python37 ]; };
        "${wsRoot cfg.workspace.token}/vros-clixon/.ccls-root".text = "";
        "${wsRoot cfg.workspace.token}/vros-clixon/.envrc".text = ''
          use nix
        '';
        "${wsRoot cfg.workspace.token}/vros-clixon/shell.nix".text = mkProjectShellNix {
          simple = with pkgs; [ bear bison flex ];
          native = with pkgs; [
            cligen
            qdbm.dev
            qdbm.lib
            fcgi
            libxml2.dev
            libxml2
            python37
            curl.dev
            curl.out
            ncurses.dev
          ];
        };
        "${wsRoot "global"}/src.libcode.org/pkun/klish/.envrc".text = ''
          use nix
        '';
        "${wsRoot "global"}/src.libcode.org/pkun/klish/shell.nix".text = mkProjectShellNix {
          simple = with pkgs; [ automake autoconf libtool expat.out expat.dev libxml2.out libxml2.dev ];
          native = with pkgs; [ faux.out faux.dev ];
          shell = ''
            sudo ln -svf ${pkgs.file}/bin/file /usr/bin/file
          '';
        };
      } // lib.optionalAttrs (config.custom.dev.git.enable && config.custom.dev.git.hooks.enable) {
        "${wsRoot cfg.workspace.token}/vros-cli/src/.pre-commit-config.yaml".text = builtins.toJSON {
          repos = [
            {
              repo = "https://github.com/jorisroovers/gitlint";
              rev = "v0.13.1";
              hooks = [{ id = "gitlint"; }];
            }
            {
              repo = "https://github.com/wiedzmin/git-hooks";
              rev = "master";
              hooks = [{ id = "forbid-pushing-wip"; }];
            }
          ];
        };
      } // lib.optionalAttrs (config.custom.shell.enable) {
        ".tmuxp/meganet.yml".text = ''
          session_name: meganet
          windows:
            - window_name: build/deploy
              start_directory: ${wsRootAbs cfg.workspace.token}/vros-cli/src
              panes:
                -
        '';
      };
    };
  #+end_src
